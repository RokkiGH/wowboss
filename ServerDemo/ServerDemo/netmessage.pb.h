// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: netmessage.proto

#ifndef PROTOBUF_netmessage_2eproto__INCLUDED
#define PROTOBUF_netmessage_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2004000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2004001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_message_reflection.h>
// @@protoc_insertion_point(includes)

namespace wowboss {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_netmessage_2eproto();
void protobuf_AssignDesc_netmessage_2eproto();
void protobuf_ShutdownFile_netmessage_2eproto();

class NMHello;
class NetMessage;

enum NetMessage_MessageType {
  NetMessage_MessageType_HELLO = 0
};
bool NetMessage_MessageType_IsValid(int value);
const NetMessage_MessageType NetMessage_MessageType_MessageType_MIN = NetMessage_MessageType_HELLO;
const NetMessage_MessageType NetMessage_MessageType_MessageType_MAX = NetMessage_MessageType_HELLO;
const int NetMessage_MessageType_MessageType_ARRAYSIZE = NetMessage_MessageType_MessageType_MAX + 1;

const ::google::protobuf::EnumDescriptor* NetMessage_MessageType_descriptor();
inline const ::std::string& NetMessage_MessageType_Name(NetMessage_MessageType value) {
  return ::google::protobuf::internal::NameOfEnum(
    NetMessage_MessageType_descriptor(), value);
}
inline bool NetMessage_MessageType_Parse(
    const ::std::string& name, NetMessage_MessageType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<NetMessage_MessageType>(
    NetMessage_MessageType_descriptor(), name, value);
}
// ===================================================================

class NMHello : public ::google::protobuf::Message {
 public:
  NMHello();
  virtual ~NMHello();
  
  NMHello(const NMHello& from);
  
  inline NMHello& operator=(const NMHello& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const NMHello& default_instance();
  
  void Swap(NMHello* other);
  
  // implements Message ----------------------------------------------
  
  NMHello* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const NMHello& from);
  void MergeFrom(const NMHello& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required int32 version = 1;
  inline bool has_version() const;
  inline void clear_version();
  static const int kVersionFieldNumber = 1;
  inline ::google::protobuf::int32 version() const;
  inline void set_version(::google::protobuf::int32 value);
  
  // @@protoc_insertion_point(class_scope:wowboss.NMHello)
 private:
  inline void set_has_version();
  inline void clear_has_version();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::int32 version_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_netmessage_2eproto();
  friend void protobuf_AssignDesc_netmessage_2eproto();
  friend void protobuf_ShutdownFile_netmessage_2eproto();
  
  void InitAsDefaultInstance();
  static NMHello* default_instance_;
};
// -------------------------------------------------------------------

class NetMessage : public ::google::protobuf::Message {
 public:
  NetMessage();
  virtual ~NetMessage();
  
  NetMessage(const NetMessage& from);
  
  inline NetMessage& operator=(const NetMessage& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const NetMessage& default_instance();
  
  void Swap(NetMessage* other);
  
  // implements Message ----------------------------------------------
  
  NetMessage* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const NetMessage& from);
  void MergeFrom(const NetMessage& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  typedef NetMessage_MessageType MessageType;
  static const MessageType HELLO = NetMessage_MessageType_HELLO;
  static inline bool MessageType_IsValid(int value) {
    return NetMessage_MessageType_IsValid(value);
  }
  static const MessageType MessageType_MIN =
    NetMessage_MessageType_MessageType_MIN;
  static const MessageType MessageType_MAX =
    NetMessage_MessageType_MessageType_MAX;
  static const int MessageType_ARRAYSIZE =
    NetMessage_MessageType_MessageType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MessageType_descriptor() {
    return NetMessage_MessageType_descriptor();
  }
  static inline const ::std::string& MessageType_Name(MessageType value) {
    return NetMessage_MessageType_Name(value);
  }
  static inline bool MessageType_Parse(const ::std::string& name,
      MessageType* value) {
    return NetMessage_MessageType_Parse(name, value);
  }
  
  // accessors -------------------------------------------------------
  
  // required .wowboss.NetMessage.MessageType id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::wowboss::NetMessage_MessageType id() const;
  inline void set_id(::wowboss::NetMessage_MessageType value);
  
  // optional .wowboss.NMHello hello = 2;
  inline bool has_hello() const;
  inline void clear_hello();
  static const int kHelloFieldNumber = 2;
  inline const ::wowboss::NMHello& hello() const;
  inline ::wowboss::NMHello* mutable_hello();
  inline ::wowboss::NMHello* release_hello();
  
  // @@protoc_insertion_point(class_scope:wowboss.NetMessage)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_hello();
  inline void clear_has_hello();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::wowboss::NMHello* hello_;
  int id_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_netmessage_2eproto();
  friend void protobuf_AssignDesc_netmessage_2eproto();
  friend void protobuf_ShutdownFile_netmessage_2eproto();
  
  void InitAsDefaultInstance();
  static NetMessage* default_instance_;
};
// ===================================================================


// ===================================================================

// NMHello

// required int32 version = 1;
inline bool NMHello::has_version() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void NMHello::set_has_version() {
  _has_bits_[0] |= 0x00000001u;
}
inline void NMHello::clear_has_version() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void NMHello::clear_version() {
  version_ = 0;
  clear_has_version();
}
inline ::google::protobuf::int32 NMHello::version() const {
  return version_;
}
inline void NMHello::set_version(::google::protobuf::int32 value) {
  set_has_version();
  version_ = value;
}

// -------------------------------------------------------------------

// NetMessage

// required .wowboss.NetMessage.MessageType id = 1;
inline bool NetMessage::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void NetMessage::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void NetMessage::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void NetMessage::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::wowboss::NetMessage_MessageType NetMessage::id() const {
  return static_cast< ::wowboss::NetMessage_MessageType >(id_);
}
inline void NetMessage::set_id(::wowboss::NetMessage_MessageType value) {
  GOOGLE_DCHECK(::wowboss::NetMessage_MessageType_IsValid(value));
  set_has_id();
  id_ = value;
}

// optional .wowboss.NMHello hello = 2;
inline bool NetMessage::has_hello() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void NetMessage::set_has_hello() {
  _has_bits_[0] |= 0x00000002u;
}
inline void NetMessage::clear_has_hello() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void NetMessage::clear_hello() {
  if (hello_ != NULL) hello_->::wowboss::NMHello::Clear();
  clear_has_hello();
}
inline const ::wowboss::NMHello& NetMessage::hello() const {
  return hello_ != NULL ? *hello_ : *default_instance_->hello_;
}
inline ::wowboss::NMHello* NetMessage::mutable_hello() {
  set_has_hello();
  if (hello_ == NULL) hello_ = new ::wowboss::NMHello;
  return hello_;
}
inline ::wowboss::NMHello* NetMessage::release_hello() {
  clear_has_hello();
  ::wowboss::NMHello* temp = hello_;
  hello_ = NULL;
  return temp;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace wowboss

#ifndef SWIG
namespace google {
namespace protobuf {

template <>
inline const EnumDescriptor* GetEnumDescriptor< ::wowboss::NetMessage_MessageType>() {
  return ::wowboss::NetMessage_MessageType_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_netmessage_2eproto__INCLUDED
